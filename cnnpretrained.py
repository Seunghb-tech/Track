# -*- coding: utf-8 -*-
"""cnnPreTrained.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14xXummG0QYSHtFP49b9wV8EARViFGaFb
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import keras
from keras.applications import vgg16, inception_v3, resnet50, mobilenet
from keras.preprocessing.image import load_img, img_to_array
from keras.applications.imagenet_utils import decode_predictions

vgg_model = vgg16.VGG16(weights='imagenet')

# from google.colab import files
# uploaded = files.upload()

filename = 'pic.jpg'
org = load_img(filename, target_size=(224,224))
img = img_to_array(org)
plt.imshow(np.uint8(img))

print(img.shape)

x = np.expand_dims(img, axis=0)
print(x.shape)

x = vgg16.preprocess_input(x)
pred = vgg_model.predict(x)

label = decode_predictions(pred)
print(label)

vgg_model.summary()

"""# transfer learning = Fine tuning
##1. layer -> Not trainable
"""

for layer in vgg_model.layers:
  layer.trainable = False   # True
 
vgg_model.summary()

"""##2. bottleneck feature"""

